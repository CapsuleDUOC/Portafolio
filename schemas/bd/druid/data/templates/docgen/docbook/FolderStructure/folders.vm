#**

    Changes :
        - Bruno 11-10-2003 : Construct folders'id with full folder path : "FolderPath"

*### This is to avoid spaces in the beginning of the file.
##
## macro can't be recursiv in Velocity, can't they ??
##

<section id="${FolderPath}_${Folder.getNCNamePart()}">
    <title>${lang.folder} : ${Folder.name}</title>
    #if (${Folder.Descr} != "")
        <para>${Folder.xmlDescr}</para>
    #end

    #set( $firstFolder = "true" )
    #set( $childFolders = [] )

    #set( $firstListItem = "true" )
    #foreach( $child in $Folder.children )
        #if( $child.isTable)
            #set( $table = $child )
            #parse("table.vm")
        #elseif( $child.isView)
            #set( $view = $child )
            #parse("view.vm")
        #elseif( $child.isProcedure)
            #set( $procedure = $child )
            #parse("procedure.vm")
        #elseif( $child.isFunction)
            #set( $function = $child )
            #parse("function.vm")
        #elseif( $child.isSequence)
            #set( $sequence = $child )
            #parse("sequence.vm")
        #elseif( $child.isNotes)
            #set( $note = $child )
            #parse("note.vm")

        #elseif( $child.isFolder)
            #if ( $firstFolder == "true" )
                #set( $firstFolder = "false" )
                #set( $childFolders = [ $child ] )
                #set ( $FolderPath = "${FolderPath}_${Folder.getNCNamePart()}" )
            #else
                ## dummy foo to hide the returned value "True"
                #set ($foo = $childFolders.add( $child ))
            #end
        #end
        #if( (!$child.isFolder) && ( $firstListItem == "true" ))
            #set( $firstListItem = "false" )
        #end
    #end ##foreach( $child in $Folder.children )

    ##to allow empty folder not to break docbook :
    #if(( $firstListItem == "true" ) && ( $firstFolder == "true" ))
	<para>...</para>
    #end

    #foreach( $child in $childFolders )
        #set ( $Folder = $child )
        #parse("folders.vm")
    #end

</section>
