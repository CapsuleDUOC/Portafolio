//==============================================================================
//===
//===   TableOptions
//===
//===   Copyright (C) by Andrea Carboni, Damien Boucquey.
//===   This file may be distributed under the terms of the GPL license.
//==============================================================================

package mod.datagen.generic.hibernate.panels.database;

import javax.swing.JPanel;

import org.dlib.gui.FlexLayout;
import org.dlib.gui.TLabel;

import druid.util.gui.guardians.TCheckBoxGuardian;
import druid.util.gui.guardians.TComboBoxGuardian;
import druid.util.gui.guardians.TTextFieldGuardian;
import mod.datagen.generic.hibernate.DatabaseSettings;

//==============================================================================

public class TableOptions extends JPanel
{
	private TTextFieldGuardian txtClassName = new TTextFieldGuardian("ClassName");
	private TTextFieldGuardian txtDiscrVal  = new TTextFieldGuardian("DiscriminValue");
	private TTextFieldGuardian txtSchema    = new TTextFieldGuardian("Schema");
	private TTextFieldGuardian txtProxy     = new TTextFieldGuardian("Proxy");
	private TTextFieldGuardian txtWhere     = new TTextFieldGuardian("Where");
	private TTextFieldGuardian txtPersister = new TTextFieldGuardian("Persister");
	private TTextFieldGuardian txtBatchSize = new TTextFieldGuardian("BatchSize");

	private TComboBoxGuardian  tcbPolymorph = new TComboBoxGuardian("Polymorphism");
	private TComboBoxGuardian  tcbOptimLock = new TComboBoxGuardian("OptimisticLock");

	private TCheckBoxGuardian  chbMutable   = new TCheckBoxGuardian("Mutable",         "Mutable instances");
	private TCheckBoxGuardian  chbDynInsert = new TCheckBoxGuardian("DynamicInsert",   "Dynamic insert");
	private TCheckBoxGuardian  chbDynUpdate = new TCheckBoxGuardian("DynamicUpdate",   "Dynamic update");
	private TCheckBoxGuardian  chbSelBefUpd = new TCheckBoxGuardian("SelectBeforeUpd", "Select before update");
	private TCheckBoxGuardian  chbLazy      = new TCheckBoxGuardian("Lazy",            "Lazy initialization");

	private TCheckBoxGuardian  chbGenIds    = new TCheckBoxGuardian("GenerateIds", "Generate ids when possible");
	private TCheckBoxGuardian  chbForKeys   = new TCheckBoxGuardian("ForeignKeys", "Generate table relationships");

	//---------------------------------------------------------------------------

	public TableOptions()
	{
		FlexLayout flexL = new FlexLayout(2, 17);
		flexL.setColProp(1, FlexLayout.EXPAND);
		setLayout(flexL);

		add("0,0", new TLabel("Class name"));
		add("0,1", new TLabel("Discriminator"));
		add("0,2", new TLabel("Schema"));
		add("0,3", new TLabel("Proxy"));
		add("0,4", new TLabel("Where"));
		add("0,5", new TLabel("Persister"));
		add("0,6", new TLabel("BatchSize"));
		add("0,7", new TLabel("Polymorphism"));
		add("0,8", new TLabel("Optimistic lock"));

		add("1,0,x", txtClassName);
		add("1,1,x", txtDiscrVal);
		add("1,2,x", txtSchema);
		add("1,3,x", txtProxy);
		add("1,4,x", txtWhere);
		add("1,5,x", txtPersister);
		add("1,6,x", txtBatchSize);
		add("1,7,x", tcbPolymorph);
		add("1,8,x", tcbOptimLock);

		add("0,10,x,c,2", chbMutable);
		add("0,11,x,c,2", chbDynInsert);
		add("0,12,x,c,2", chbDynUpdate);
		add("0,13,x,c,2", chbSelBefUpd);
		add("0,14,x,c,2", chbLazy);
		add("0,15,x,c,2", chbGenIds);
		add("0,16,x,c,2", chbForKeys);

		chbGenIds.setToolTipText("When checked, id is generated by Hibernate using native DBMS capability. "+
										 "Require the application to explicitly set the id before Save() otherwise.");

		chbForKeys.setToolTipText("Generate one-to-many, many-to-one, etc mappings");

		//--- setup comboboxes

		tcbPolymorph.addItem(DatabaseSettings.POLYMORPH_IMPLICIT, "Implicit");
		tcbPolymorph.addItem(DatabaseSettings.POLYMORPH_EXPLICIT, "Explicit");

		tcbOptimLock.addItem(DatabaseSettings.OPTLOCK_NONE,    "None");
		tcbOptimLock.addItem(DatabaseSettings.OPTLOCK_VERSION, "Version");
		tcbOptimLock.addItem(DatabaseSettings.OPTLOCK_DIRTY,   "Dirty");
		tcbOptimLock.addItem(DatabaseSettings.OPTLOCK_ALL,     "All");

		txtClassName.setToolTipText("If omitted, it is assumed as <package>.<table>");
	}

	//---------------------------------------------------------------------------

	public void refresh(DatabaseSettings s)
	{
		txtClassName.refresh(s);
		txtDiscrVal .refresh(s);
		txtSchema   .refresh(s);
		txtProxy    .refresh(s);
		txtWhere    .refresh(s);
		txtPersister.refresh(s);
		txtBatchSize.refresh(s);

		tcbPolymorph.refresh(s);
		tcbOptimLock.refresh(s);

		chbMutable  .refresh(s);
		chbDynInsert.refresh(s);
		chbDynUpdate.refresh(s);
		chbSelBefUpd.refresh(s);
		chbLazy     .refresh(s);
		chbGenIds   .refresh(s);
		chbForKeys  .refresh(s);
	}
}

//==============================================================================
